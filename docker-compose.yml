version: '3'

services:

  postgres:
    restart: always
    image: mdillon/postgis:9.4-alpine
    environment:
      POSTGRES_DB: coopcycle
    ports:
      - '5432:5432'
    volumes:
      - 'pg_data:/var/lib/postgresql/data'

  redis:
    restart: always
    image: redis:alpine
    ports:
      - '6379:6379'

  nodejs:
    build:
      dockerfile: './docker/nodejs/Dockerfile'
      context: '.'
    depends_on:
      - postgres
      - redis
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8002:8002'
    volumes:
      - 'node_modules:/srv/coopcycle/node_modules'
      - './:/srv/coopcycle:cached'

  webpack:
    build:
      dockerfile: './docker/webpack/Dockerfile'
      context: '.'
    ports:
      - '8080:8080'
    volumes:
      - 'node_modules:/srv/coopcycle/node_modules'
      - './:/srv/coopcycle:cached'

  osrm:
    build: './docker/osrm'
    ports:
      - '5000:5000'
    volumes:
      - './var/osrm:/data'
    environment:
      OSRM_FILENAME: data.osrm

  php:
    build:
      dockerfile: './docker/php/Dockerfile'
      context: '.'
    depends_on:
      - postgres
      - redis
      - osrm
      - graphite
      - stripe_mock
    links:
      - osrm
      - graphite
      - stripe_mock
    environment:
      SYMFONY_ENV: dev
      BEHAT_PARAMS: '{"extensions":{"Behat\\MinkExtension":{"base_url": "http://nginx_test:80","sessions":{"selenium2":{"selenium2":{"wd_host":"http://zalenium:4444/wd/hub"}}}}}}'
      ASSETS_BASE_URL: http://webpack:8080
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
    volumes:
      - 'php_cache:/srv/coopcycle/var/cache'
      - './:/srv/coopcycle:cached'

  nginx:
    image: 'nginx:1.11-alpine'
    depends_on:
      - php
      - nodejs
    ports:
      - '80:80'
    volumes:
      - './docker/nginx/conf.d:/etc/nginx/conf.d:ro'
      - './web:/srv/coopcycle/web:ro'
      - './vendor:/srv/coopcycle/vendor:ro'

  nginx_test:
    image: 'nginx:1.11-alpine'
    depends_on:
      - php
      - nodejs
    ports:
      - '9080:80'
    volumes:
      - './docker/nginx_test/conf.d:/etc/nginx/conf.d:ro'
      - './web:/srv/coopcycle/web:ro'
      - './vendor:/srv/coopcycle/vendor:ro'

  smtp:
    image: namshi/smtp
    ports:
      - 25:25

  graphite:
    restart: always
    image: graphiteapp/graphite-statsd:latest
    ports:
      - '7000:80'
      - '2003-2004:2003-2004'
      - '2023-2024:2023-2024'
      - '8125:8125/udp'
      - '8126:8126'

  grafana:
    image: grafana/grafana:latest
    ports:
      - '3000:3000'
    depends_on:
      - graphite
    links:
      - graphite

  stripe_mock:
    image: stripemock/stripe-mock:latest
    ports:
      - '12111:12111'

  zalenium:
    image: dosel/zalenium
    tty: true
    volumes:
      - /tmp/videos:/home/seluser/videos
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 4444:4444
    command: >
      start --timeZone "Europe/Paris"
    environment:
      - PULL_SELENIUM_IMAGE=true

  redash:
    image: redash/redash
    depends_on:
      - postgres
      - redis
    links:
      - postgres
      - redis
    command: server
    ports:
      - '5001:5000'
    environment:
      # Create user & database
      # docker-compose exec postgres psql -U postgres -c 'CREATE USER redash'
      # docker-compose exec postgres psql -U postgres -c 'CREATE DATABASE redash'
      # docker-compose exec postgres psql -U postgres -c 'GRANT ALL PRIVILEGES ON DATABASE redash TO redash'
      # docker-compose run --rm redash create_db

      # Limit the user to only some tables
      # https://redash.io/help/user-guide/users/permissions-groups
      # docker-compose exec postgres psql -U postgres -d coopcycle -c 'GRANT SELECT ON TABLE address TO redash'
      # docker-compose exec postgres psql -U postgres -d coopcycle -c 'GRANT SELECT ON TABLE restaurant TO redash'
      # docker-compose exec postgres psql -U postgres -d coopcycle -c 'GRANT SELECT ON TABLE sylius_order TO redash'

      # https://www.postgresql.org/docs/10/libpq-connect.html#id-1.7.3.8.3.6
      # postgresql://[user[:password]@][netloc][:port][,...][/dbname][?param1=value1&...]
      REDASH_DATABASE_URL: "postgresql://redash@postgres/redash"
      REDASH_REDIS_URL: "redis://redis:6379/2"

  redash_scheduler:
    image: redash/redash
    depends_on:
      - postgres
      - redis
    links:
      - postgres
      - redis
    command: scheduler
    environment:
      QUEUES: "celery"
      WORKERS_COUNT: 1
      REDASH_DATABASE_URL: "postgresql://redash@postgres/redash"
      REDASH_REDIS_URL: "redis://redis:6379/2"

  redash_scheduler_worker:
    image: redash/redash
    depends_on:
      - postgres
      - redis
    links:
      - postgres
      - redis
    command: worker
    environment:
      QUEUES: "scheduled_queries,schemas"
      WORKERS_COUNT: 1
      REDASH_DATABASE_URL: "postgresql://redash@postgres/redash"
      REDASH_REDIS_URL: "redis://redis:6379/2"

  redash_adhoc_worker:
    image: redash/redash
    depends_on:
      - postgres
      - redis
    links:
      - postgres
      - redis
    command: worker
    environment:
      QUEUES: "queries"
      WORKERS_COUNT: 2
      REDASH_DATABASE_URL: "postgresql://redash@postgres/redash"
      REDASH_REDIS_URL: "redis://redis:6379/2"

volumes:
  node_modules:
  pg_data:
  php_cache:
