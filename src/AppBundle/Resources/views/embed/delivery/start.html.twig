{% extends "@App/base.html.twig" %}

{% form_theme form with ['@App/form/delivery.html.twig', '@App/form/delivery_embed.html.twig'] %}

{% block banner %}{% endblock %}
{% block menu %}{% endblock %}
{% block footer %}{% endblock %}

{% block body %}

<div style="padding: 20px;">

  {% include "@App/embed/delivery/breadcrumb.html.twig" %}

  {{ form_start(form, { action: path('embed_delivery_summary'), attr: {  autocomplete: 'off' } }) }}

    {{ form_errors(form) }}

    {{ form_row(form.pickup) }}
    {{ form_row(form.dropoff) }}

    {% if form.vehicle is defined %}
      {{ form_row(form.vehicle) }}
    {% endif %}

    <h3>{{ 'embed.delivery.contact_heading'|trans }}</h3>

    {{ form_row(form.name) }}
    {{ form_row(form.email) }}
    {{ form_row(form.telephone) }}

    <p class="text-center">
        <a role="button" data-toggle="collapse" data-target="#billing-address" aria-expanded="false" aria-controls="billing-address">
        {{ 'embed.delivery.specify_billing_address'|trans }}
      </a>
    </p>
    <div class="collapse" id="billing-address">
      <h3>{{ 'embed.delivery.billing_address'|trans }}</h3>
      {{ form_widget(form.billingAddress) }}
    </div>

    {{ form_widget(form._token) }}

    <hr>

    <button type="submit" class="btn btn-block btn-lg btn-primary">{{ 'basics.next'|trans }}</button>

  {{ form_end(form, { render_rest: false }) }}

  {% include "@App/embed/delivery/footer.html.twig" %}

</div>
{% endblock %}

{% block scripts %}

{% set pickup_date = null %}
{% set dropoff_date = null %}

{% if form.pickup.doneBefore.vars.value is not empty %}
  {% set pickup_date = form.pickup.doneBefore.vars.value|date('Y-m-d H:i:s') %}
{% endif %}

{% if form.dropoff.doneBefore.vars.value is not empty %}
  {% set dropoff_date = form.dropoff.doneBefore.vars.value|date('Y-m-d H:i:s') %}
{% endif %}

<script>
function initMap() {

  var tasks = {
    pickup: {
      doneBefore: {{ pickup_date|json_encode()|raw }},
    },
    dropoff: {
      doneBefore: {{ dropoff_date|json_encode()|raw }}
    }
  }

  $.each(tasks, function(type, data) {
    new CoopCycle.DateTimePicker(document.querySelector(`#delivery_${type}_doneBefore_widget`), {
      defaultValue: data.doneBefore,
      getDatePickerContainer: function(trigger) {
        return trigger.parentNode;
      },
      getTimePickerContainer: function(trigger) {
        return trigger.parentNode;
      },
      onChange: function(date, dateString) {
        if (date) {
          document.querySelector(`#delivery_${type}_doneBefore`).value = date.format('YYYY-MM-DD HH:mm:ss')
        }
      }
    });
    new CoopCycle.AddressInput(document.querySelector(`#delivery_${type}_address_streetAddress`), {
      elements: {
        latitude: document.querySelector(`#delivery_${type}_address_latitude`),
        longitude: document.querySelector(`#delivery_${type}_address_longitude `),
        postalCode: document.querySelector(`#delivery_${type}_address_postalCode`),
        addressLocality: document.querySelector(`#delivery_${type}_address_addressLocality`)
      }
    });
  })

  new CoopCycle.AddressInput(document.querySelector(`#delivery_billingAddress_streetAddress`), {
    elements: {
      latitude: document.querySelector(`#delivery_billingAddress_latitude`),
      longitude: document.querySelector(`#delivery_billingAddress_longitude `),
      postalCode: document.querySelector(`#delivery_billingAddress_postalCode`),
      addressLocality: document.querySelector(`#delivery_billingAddress_addressLocality`)
    }
  });

}
</script>
<script>
$('#billing-address').on('hidden.bs.collapse', function () {
  $('#delivery_billingAddress_streetAddress').removeAttr('required');
})
$('#billing-address').on('shown.bs.collapse', function () {
  $('#delivery_billingAddress_streetAddress').attr('required', true);
});
$('#delivery_billingAddress_streetAddress').removeAttr('required');
</script>
<script src="https://maps.googleapis.com/maps/api/js?key={{ coopcycle_setting('google_api_key') }}&libraries=places&callback=initMap"
  async defer></script>
{% endblock %}
